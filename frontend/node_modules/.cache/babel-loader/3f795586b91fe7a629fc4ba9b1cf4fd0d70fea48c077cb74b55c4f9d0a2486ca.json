{"ast":null,"code":"/**\r\n* @file api.js\r\n* @author Micah Chen\r\n* @description This module exports a pre-configured instance of axios for making HTTP requests to the server.\r\n* It includes an interceptor that automatically adds an Authorization header to each request, using an access token from local storage if available.\r\n* This ensures that all requests are authenticated if the user is logged in.\r\n*/\n\nimport axios from 'axios';\nimport { ACCESS_TOKEN } from './Constants';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_HARBINGER_BACKEND_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(ACCESS_TOKEN);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // jwt token added `Bearer ` to the token for syntax\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","ACCESS_TOKEN","api","create","baseURL","process","env","REACT_APP_HARBINGER_BACKEND_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/micah/Desktop/Harbinger_Frontend/frontend/src/api.js"],"sourcesContent":["/**\r\n* @file api.js\r\n* @author Micah Chen\r\n* @description This module exports a pre-configured instance of axios for making HTTP requests to the server.\r\n* It includes an interceptor that automatically adds an Authorization header to each request, using an access token from local storage if available.\r\n* This ensures that all requests are authenticated if the user is logged in.\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport { ACCESS_TOKEN } from './Constants';\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_HARBINGER_BACKEND_URL,\r\n});\r\n\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem(ACCESS_TOKEN);\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`; // jwt token added `Bearer ` to the token for syntax\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,aAAa;AAE1C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACzB,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACb,YAAY,CAAC;EAChD,IAAIW,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC,CAAC,CAAC;EACtD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAM,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}