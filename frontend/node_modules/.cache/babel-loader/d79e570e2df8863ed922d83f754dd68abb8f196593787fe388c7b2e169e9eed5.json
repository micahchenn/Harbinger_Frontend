{"ast":null,"code":"import { Interaction } from 'chart.js';\nimport { valueOrDefault } from 'chart.js/helpers';\nfunction interpolate(chart, e, options) {\n  var items = [];\n  for (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n    // check for interpolate setting\n    if (!chart.data.datasets[datasetIndex].interpolate) {\n      continue;\n    }\n    var meta = chart.getDatasetMeta(datasetIndex);\n    // do not interpolate hidden charts\n    if (meta.hidden) {\n      continue;\n    }\n    var xScale = chart.scales[meta.xAxisID];\n    var yScale = chart.scales[meta.yAxisID];\n    var xValue = xScale.getValueForPixel(e.x);\n    if (xValue > xScale.max || xValue < xScale.min) {\n      continue;\n    }\n    var data = chart.data.datasets[datasetIndex].data;\n    var index = data.findIndex(function (o) {\n      return o.x >= xValue;\n    });\n    if (index === -1) {\n      continue;\n    }\n\n    // linear interpolate value\n    var prev = data[index - 1];\n    var next = data[index];\n    if (prev && next) {\n      var slope = (next.y - prev.y) / (next.x - prev.x);\n      var interpolatedValue = prev.y + (xValue - prev.x) * slope;\n    }\n    if (chart.data.datasets[datasetIndex].steppedLine && prev) {\n      interpolatedValue = prev.y;\n    }\n    if (isNaN(interpolatedValue)) {\n      continue;\n    }\n    var yPosition = yScale.getPixelForValue(interpolatedValue);\n\n    // do not interpolate values outside of the axis limits\n    if (isNaN(yPosition)) {\n      continue;\n    }\n\n    // create a 'fake' event point\n\n    var fakePoint = {\n      hasValue: function () {\n        return true;\n      },\n      tooltipPosition: function () {\n        return this._model;\n      },\n      _model: {\n        x: e.x,\n        y: yPosition\n      },\n      skip: false,\n      stop: false,\n      x: xValue,\n      y: interpolatedValue\n    };\n    items.push({\n      datasetIndex: datasetIndex,\n      element: fakePoint,\n      index: 0\n    });\n  }\n\n  // add other, not interpolated, items\n  var xItems = Interaction.modes.x(chart, e, options);\n  for (index = 0; index < xItems.length; index++) {\n    var item = xItems[index];\n    if (!chart.data.datasets[item.datasetIndex].interpolate) {\n      items.push(item);\n    }\n  }\n  return items;\n}\nvar defaultOptions = {\n  line: {\n    color: '#F66',\n    width: 1,\n    dashPattern: []\n  },\n  sync: {\n    enabled: true,\n    group: 1,\n    suppressTooltips: false\n  },\n  zoom: {\n    enabled: true,\n    zoomboxBackgroundColor: 'rgba(66,133,244,0.2)',\n    zoomboxBorderColor: '#48F',\n    zoomButtonText: 'Reset Zoom',\n    zoomButtonClass: 'reset-zoom'\n  },\n  snap: {\n    enabled: false\n  },\n  callbacks: {\n    beforeZoom: function (start, end) {\n      return true;\n    },\n    afterZoom: function (start, end) {}\n  }\n};\nvar CrosshairPlugin = {\n  id: 'crosshair',\n  afterInit: function (chart) {\n    if (!chart.config.options.scales.x) {\n      return;\n    }\n    var xScaleType = chart.config.options.scales.x.type;\n    if (xScaleType !== 'linear' && xScaleType !== 'time' && xScaleType !== 'category' && xScaleType !== 'logarithmic') {\n      return;\n    }\n    if (chart.options.plugins.crosshair === undefined) {\n      chart.options.plugins.crosshair = defaultOptions;\n    }\n    chart.crosshair = {\n      enabled: false,\n      suppressUpdate: false,\n      x: null,\n      originalData: [],\n      originalXRange: {},\n      dragStarted: false,\n      dragStartX: null,\n      dragEndX: null,\n      suppressTooltips: false,\n      ignoreNextEvents: 0,\n      reset: function () {\n        this.resetZoom(chart, false, false);\n      }.bind(this)\n    };\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    if (syncEnabled) {\n      chart.crosshair.syncEventHandler = function (e) {\n        this.handleSyncEvent(chart, e);\n      }.bind(this);\n      chart.crosshair.resetZoomEventHandler = function (e) {\n        var syncGroup = this.getOption(chart, 'sync', 'group');\n        if (e.chartId !== chart.id && e.syncGroup === syncGroup) {\n          this.resetZoom(chart, true);\n        }\n      }.bind(this);\n      window.addEventListener('sync-event', chart.crosshair.syncEventHandler);\n      window.addEventListener('reset-zoom-event', chart.crosshair.resetZoomEventHandler);\n    }\n    chart.panZoom = this.panZoom.bind(this, chart);\n  },\n  afterDestroy: function (chart) {\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    if (syncEnabled) {\n      window.removeEventListener('sync-event', chart.crosshair.syncEventHandler);\n      window.removeEventListener('reset-zoom-event', chart.crosshair.resetZoomEventHandler);\n    }\n  },\n  panZoom: function (chart, increment) {\n    if (chart.crosshair.originalData.length === 0) {\n      return;\n    }\n    var diff = chart.crosshair.end - chart.crosshair.start;\n    var min = chart.crosshair.min;\n    var max = chart.crosshair.max;\n    if (increment < 0) {\n      // left\n      chart.crosshair.start = Math.max(chart.crosshair.start + increment, min);\n      chart.crosshair.end = chart.crosshair.start === min ? min + diff : chart.crosshair.end + increment;\n    } else {\n      // right\n      chart.crosshair.end = Math.min(chart.crosshair.end + increment, chart.crosshair.max);\n      chart.crosshair.start = chart.crosshair.end === max ? max - diff : chart.crosshair.start + increment;\n    }\n    this.doZoom(chart, chart.crosshair.start, chart.crosshair.end);\n  },\n  getOption: function (chart, category, name) {\n    return valueOrDefault(chart.options.plugins.crosshair[category] ? chart.options.plugins.crosshair[category][name] : undefined, defaultOptions[category][name]);\n  },\n  getXScale: function (chart) {\n    return chart.data.datasets.length ? chart.scales[chart.getDatasetMeta(0).xAxisID] : null;\n  },\n  getYScale: function (chart) {\n    return chart.scales[chart.getDatasetMeta(0).yAxisID];\n  },\n  handleSyncEvent: function (chart, e) {\n    var syncGroup = this.getOption(chart, 'sync', 'group');\n\n    // stop if the sync event was fired from this chart\n    if (e.chartId === chart.id) {\n      return;\n    }\n\n    // stop if the sync event was fired from a different group\n    if (e.syncGroup !== syncGroup) {\n      return;\n    }\n    var xScale = this.getXScale(chart);\n    if (!xScale) {\n      return;\n    }\n\n    // Safari fix\n    var buttons = e.original.native.buttons === undefined ? e.original.native.which : e.original.native.buttons;\n    if (e.original.type === 'mouseup') {\n      buttons = 0;\n    }\n    var newEvent = {\n      type: e.original.type == \"click\" ? \"mousemove\" : e.original.type,\n      // do not transmit click events to prevent unwanted changing of synced charts. We do need to transmit a event to stop zooming on synced charts however.\n      chart: chart,\n      x: xScale.getPixelForValue(e.xValue),\n      y: e.original.y,\n      native: {\n        buttons: buttons\n      },\n      stop: true\n    };\n    chart._eventHandler(newEvent);\n  },\n  afterEvent: function (chart, event) {\n    if (chart.config.options.scales.x.length == 0) {\n      return;\n    }\n    let e = event.event;\n    var xScaleType = chart.config.options.scales.x.type;\n    if (xScaleType !== 'linear' && xScaleType !== 'time' && xScaleType !== 'category' && xscaleType !== 'logarithmic') {\n      return;\n    }\n    var xScale = this.getXScale(chart);\n    if (!xScale) {\n      return;\n    }\n    if (chart.crosshair.ignoreNextEvents > 0) {\n      chart.crosshair.ignoreNextEvents -= 1;\n      return;\n    }\n\n    // fix for Safari\n    var buttons = e.native.buttons === undefined ? e.native.which : e.native.buttons;\n    if (e.native.type === 'mouseup') {\n      buttons = 0;\n    }\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    var syncGroup = this.getOption(chart, 'sync', 'group');\n\n    // fire event for all other linked charts\n    if (!e.stop && syncEnabled) {\n      var event = new CustomEvent('sync-event');\n      event.chartId = chart.id;\n      event.syncGroup = syncGroup;\n      event.original = e;\n      event.xValue = xScale.getValueForPixel(e.x);\n      window.dispatchEvent(event);\n    }\n\n    // suppress tooltips for linked charts\n    var suppressTooltips = this.getOption(chart, 'sync', 'suppressTooltips');\n    chart.crosshair.suppressTooltips = e.stop && suppressTooltips;\n    chart.crosshair.enabled = e.type !== 'mouseout' && e.x > xScale.getPixelForValue(xScale.min) && e.x < xScale.getPixelForValue(xScale.max);\n    if (!chart.crosshair.enabled && !chart.crosshair.suppressUpdate) {\n      if (e.x > xScale.getPixelForValue(xScale.max)) {\n        // suppress future updates to prevent endless redrawing of chart\n        chart.crosshair.suppressUpdate = true;\n        chart.update('none');\n      }\n      chart.crosshair.dragStarted = false; // cancel zoom in progress\n      return false;\n    }\n    chart.crosshair.suppressUpdate = false;\n\n    // handle drag to zoom\n    var zoomEnabled = this.getOption(chart, 'zoom', 'enabled');\n    if (buttons === 1 && !chart.crosshair.dragStarted && zoomEnabled) {\n      chart.crosshair.dragStartX = e.x;\n      chart.crosshair.dragStarted = true;\n    }\n\n    // handle drag to zoom\n    if (chart.crosshair.dragStarted && buttons === 0) {\n      chart.crosshair.dragStarted = false;\n      var start = xScale.getValueForPixel(chart.crosshair.dragStartX);\n      var end = xScale.getValueForPixel(chart.crosshair.x);\n      if (Math.abs(chart.crosshair.dragStartX - chart.crosshair.x) > 1) {\n        this.doZoom(chart, start, end);\n      }\n      chart.update('none');\n    }\n    chart.crosshair.x = e.x;\n    chart.draw();\n  },\n  afterDraw: function (chart) {\n    if (!chart.crosshair.enabled) {\n      return;\n    }\n    if (chart.crosshair.dragStarted) {\n      this.drawZoombox(chart);\n    } else {\n      this.drawTraceLine(chart);\n      this.interpolateValues(chart);\n      this.drawTracePoints(chart);\n    }\n    return true;\n  },\n  beforeTooltipDraw: function (chart) {\n    // suppress tooltips on dragging\n    return !chart.crosshair.dragStarted && !chart.crosshair.suppressTooltips;\n  },\n  resetZoom: function (chart) {\n    var stop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (update) {\n      if (chart.crosshair.originalData.length > 0) {\n        // reset original data\n        for (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n          var dataset = chart.data.datasets[datasetIndex];\n          dataset.data = chart.crosshair.originalData.shift(0);\n        }\n      }\n\n      // reset original xRange\n      if (chart.crosshair.originalXRange.min) {\n        chart.options.scales.x.min = chart.crosshair.originalXRange.min;\n        chart.crosshair.originalXRange.min = null;\n      } else {\n        delete chart.options.scales.x.min;\n      }\n      if (chart.crosshair.originalXRange.max) {\n        chart.options.scales.x.max = chart.crosshair.originalXRange.max;\n        chart.crosshair.originalXRange.max = null;\n      } else {\n        delete chart.options.scales.x.max;\n      }\n    }\n    if (chart.crosshair.button && chart.crosshair.button.parentNode) {\n      chart.crosshair.button.parentNode.removeChild(chart.crosshair.button);\n      chart.crosshair.button = false;\n    }\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    if (!stop && update && syncEnabled) {\n      var syncGroup = this.getOption(chart, 'sync', 'group');\n      var event = new CustomEvent('reset-zoom-event');\n      event.chartId = chart.id;\n      event.syncGroup = syncGroup;\n      window.dispatchEvent(event);\n    }\n    if (update) {\n      chart.update('none');\n    }\n  },\n  doZoom: function (chart, start, end) {\n    // swap start/end if user dragged from right to left\n    if (start > end) {\n      var tmp = start;\n      start = end;\n      end = tmp;\n    }\n\n    // notify delegate\n    var beforeZoomCallback = valueOrDefault(chart.options.plugins.crosshair.callbacks ? chart.options.plugins.crosshair.callbacks.beforeZoom : undefined, defaultOptions.callbacks.beforeZoom);\n    if (!beforeZoomCallback(start, end)) {\n      return false;\n    }\n    chart.crosshair.dragStarted = false;\n    if (chart.options.scales.x.min && chart.crosshair.originalData.length === 0) {\n      chart.crosshair.originalXRange.min = chart.options.scales.x.min;\n    }\n    if (chart.options.scales.x.max && chart.crosshair.originalData.length === 0) {\n      chart.crosshair.originalXRange.max = chart.options.scales.x.max;\n    }\n    if (!chart.crosshair.button) {\n      // add restore zoom button\n      var button = document.createElement('button');\n      var buttonText = this.getOption(chart, 'zoom', 'zoomButtonText');\n      var buttonClass = this.getOption(chart, 'zoom', 'zoomButtonClass');\n      var buttonLabel = document.createTextNode(buttonText);\n      button.appendChild(buttonLabel);\n      button.className = buttonClass;\n      button.addEventListener('click', function () {\n        this.resetZoom(chart);\n      }.bind(this));\n      chart.canvas.parentNode.appendChild(button);\n      chart.crosshair.button = button;\n    }\n\n    // set axis scale\n    chart.options.scales.x.min = start;\n    chart.options.scales.x.max = end;\n\n    // make a copy of the original data for later restoration\n\n    var storeOriginals = chart.crosshair.originalData.length === 0 ? true : false;\n    var filterDataset = chart.config.options.scales.x.type !== 'category';\n    if (filterDataset) {\n      for (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n        var newData = [];\n        var index = 0;\n        var started = false;\n        var stop = false;\n        if (storeOriginals) {\n          chart.crosshair.originalData[datasetIndex] = chart.data.datasets[datasetIndex].data;\n        }\n        var sourceDataset = chart.crosshair.originalData[datasetIndex];\n        for (var oldDataIndex = 0; oldDataIndex < sourceDataset.length; oldDataIndex++) {\n          var oldData = sourceDataset[oldDataIndex];\n          // var oldDataX = this.getXScale(chart).getRightValue(oldData)\n          var oldDataX = oldData.x !== undefined ? oldData.x : NaN;\n\n          // append one value outside of bounds\n          if (oldDataX >= start && !started && index > 0) {\n            newData.push(sourceDataset[index - 1]);\n            started = true;\n          }\n          if (oldDataX >= start && oldDataX <= end) {\n            newData.push(oldData);\n          }\n          if (oldDataX > end && !stop && index < sourceDataset.length) {\n            newData.push(oldData);\n            stop = true;\n          }\n          index += 1;\n        }\n        chart.data.datasets[datasetIndex].data = newData;\n      }\n    }\n    chart.crosshair.start = start;\n    chart.crosshair.end = end;\n    if (storeOriginals) {\n      var xAxes = this.getXScale(chart);\n      chart.crosshair.min = xAxes.min;\n      chart.crosshair.max = xAxes.max;\n    }\n    chart.crosshair.ignoreNextEvents = 2; // ignore next 2 events to prevent starting a new zoom action after updating the chart\n\n    chart.update('none');\n    var afterZoomCallback = this.getOption(chart, 'callbacks', 'afterZoom');\n    afterZoomCallback(start, end);\n  },\n  drawZoombox: function (chart) {\n    var yScale = this.getYScale(chart);\n    var borderColor = this.getOption(chart, 'zoom', 'zoomboxBorderColor');\n    var fillColor = this.getOption(chart, 'zoom', 'zoomboxBackgroundColor');\n    chart.ctx.beginPath();\n    chart.ctx.rect(chart.crosshair.dragStartX, yScale.getPixelForValue(yScale.max), chart.crosshair.x - chart.crosshair.dragStartX, yScale.getPixelForValue(yScale.min) - yScale.getPixelForValue(yScale.max));\n    chart.ctx.lineWidth = 1;\n    chart.ctx.strokeStyle = borderColor;\n    chart.ctx.fillStyle = fillColor;\n    chart.ctx.fill();\n    chart.ctx.fillStyle = '';\n    chart.ctx.stroke();\n    chart.ctx.closePath();\n  },\n  drawTraceLine: function (chart) {\n    var yScale = this.getYScale(chart);\n    var lineWidth = this.getOption(chart, 'line', 'width');\n    var color = this.getOption(chart, 'line', 'color');\n    var dashPattern = this.getOption(chart, 'line', 'dashPattern');\n    var snapEnabled = this.getOption(chart, 'snap', 'enabled');\n    var lineX = chart.crosshair.x;\n    if (snapEnabled && chart._active.length) {\n      lineX = chart._active[0].element.x;\n    }\n    chart.ctx.beginPath();\n    chart.ctx.setLineDash(dashPattern);\n    chart.ctx.moveTo(lineX, yScale.getPixelForValue(yScale.max));\n    chart.ctx.lineWidth = lineWidth;\n    chart.ctx.strokeStyle = color;\n    chart.ctx.lineTo(lineX, yScale.getPixelForValue(yScale.min));\n    chart.ctx.stroke();\n    chart.ctx.setLineDash([]);\n  },\n  drawTracePoints: function (chart) {\n    for (var chartIndex = 0; chartIndex < chart.data.datasets.length; chartIndex++) {\n      var dataset = chart.data.datasets[chartIndex];\n      var meta = chart.getDatasetMeta(chartIndex);\n      var yScale = chart.scales[meta.yAxisID];\n      if (meta.hidden || !dataset.interpolate) {\n        continue;\n      }\n      chart.ctx.beginPath();\n      chart.ctx.arc(chart.crosshair.x, yScale.getPixelForValue(dataset.interpolatedValue), 3, 0, 2 * Math.PI, false);\n      chart.ctx.fillStyle = 'white';\n      chart.ctx.lineWidth = 2;\n      chart.ctx.strokeStyle = dataset.borderColor;\n      chart.ctx.fill();\n      chart.ctx.stroke();\n    }\n  },\n  interpolateValues: function (chart) {\n    for (var chartIndex = 0; chartIndex < chart.data.datasets.length; chartIndex++) {\n      var dataset = chart.data.datasets[chartIndex];\n      var meta = chart.getDatasetMeta(chartIndex);\n      var xScale = chart.scales[meta.xAxisID];\n      var xValue = xScale.getValueForPixel(chart.crosshair.x);\n      if (meta.hidden || !dataset.interpolate) {\n        continue;\n      }\n      var data = dataset.data;\n      var index = data.findIndex(function (o) {\n        return o.x >= xValue;\n      });\n      var prev = data[index - 1];\n      var next = data[index];\n      if (chart.data.datasets[chartIndex].steppedLine && prev) {\n        dataset.interpolatedValue = prev.y;\n      } else if (prev && next) {\n        var slope = (next.y - prev.y) / (next.x - prev.x);\n        dataset.interpolatedValue = prev.y + (xValue - prev.x) * slope;\n      } else {\n        dataset.interpolatedValue = NaN;\n      }\n    }\n  }\n};\nexport { CrosshairPlugin, interpolate as Interpolate, CrosshairPlugin as default };","map":{"version":3,"names":["Interaction","valueOrDefault","interpolate","chart","e","options","items","datasetIndex","data","datasets","length","meta","getDatasetMeta","hidden","xScale","scales","xAxisID","yScale","yAxisID","xValue","getValueForPixel","x","max","min","index","findIndex","o","prev","next","slope","y","interpolatedValue","steppedLine","isNaN","yPosition","getPixelForValue","fakePoint","hasValue","tooltipPosition","_model","skip","stop","push","element","xItems","modes","item","defaultOptions","line","color","width","dashPattern","sync","enabled","group","suppressTooltips","zoom","zoomboxBackgroundColor","zoomboxBorderColor","zoomButtonText","zoomButtonClass","snap","callbacks","beforeZoom","start","end","afterZoom","CrosshairPlugin","id","afterInit","config","xScaleType","type","plugins","crosshair","undefined","suppressUpdate","originalData","originalXRange","dragStarted","dragStartX","dragEndX","ignoreNextEvents","reset","resetZoom","bind","syncEnabled","getOption","syncEventHandler","handleSyncEvent","resetZoomEventHandler","syncGroup","chartId","window","addEventListener","panZoom","afterDestroy","removeEventListener","increment","diff","Math","doZoom","category","name","getXScale","getYScale","buttons","original","native","which","newEvent","_eventHandler","afterEvent","event","xscaleType","CustomEvent","dispatchEvent","update","zoomEnabled","abs","draw","afterDraw","drawZoombox","drawTraceLine","interpolateValues","drawTracePoints","beforeTooltipDraw","arguments","dataset","shift","button","parentNode","removeChild","tmp","beforeZoomCallback","document","createElement","buttonText","buttonClass","buttonLabel","createTextNode","appendChild","className","canvas","storeOriginals","filterDataset","newData","started","sourceDataset","oldDataIndex","oldData","oldDataX","NaN","xAxes","afterZoomCallback","borderColor","fillColor","ctx","beginPath","rect","lineWidth","strokeStyle","fillStyle","fill","stroke","closePath","snapEnabled","lineX","_active","setLineDash","moveTo","lineTo","chartIndex","arc","PI","Interpolate","default"],"sources":["C:/Users/micah/Desktop/Harbinger_Frontend/frontend/node_modules/chartjs-plugin-crosshair/dist/chartjs-plugin-crosshair.esm.js"],"sourcesContent":["import { Interaction } from 'chart.js';\nimport { valueOrDefault } from 'chart.js/helpers';\n\nfunction interpolate(chart, e, options) {\n\n\tvar items = [];\n\n\tfor (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n\n\n\t\t// check for interpolate setting\n\t\tif (!chart.data.datasets[datasetIndex].interpolate) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t// do not interpolate hidden charts\n\t\tif (meta.hidden) {\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tvar xScale = chart.scales[meta.xAxisID];\n\t\tvar yScale = chart.scales[meta.yAxisID];\n\n\t\tvar xValue = xScale.getValueForPixel(e.x);\n\n\t\tif (xValue > xScale.max || xValue < xScale.min) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar data = chart.data.datasets[datasetIndex].data;\n\n\t\tvar index = data.findIndex(function(o) {\n\t\t\treturn o.x >= xValue;\n\t\t});\n\n\t\tif (index === -1) {\n\t\t\tcontinue;\n\t\t}\n\n\n\t\t// linear interpolate value\n\t\tvar prev = data[index - 1];\n\t\tvar next = data[index];\n\n\t\tif (prev && next) {\n\t\t\tvar slope = (next.y - prev.y) / (next.x - prev.x);\n\t\t\tvar interpolatedValue = prev.y + (xValue - prev.x) * slope;\n\t\t}\n\n\t\tif (chart.data.datasets[datasetIndex].steppedLine && prev) {\n\t\t\tinterpolatedValue = prev.y;\n\t\t}\n\n\t\tif (isNaN(interpolatedValue)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar yPosition = yScale.getPixelForValue(interpolatedValue);\n\n\t\t// do not interpolate values outside of the axis limits\n\t\tif (isNaN(yPosition)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// create a 'fake' event point\n\n\t\tvar fakePoint = {\n\t\t\thasValue: function() {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\ttooltipPosition: function() {\n\t\t\t\treturn this._model\n\t\t\t},\n\t\t\t_model: {x: e.x, y: yPosition},\n\t\t\tskip: false,\n\t\t\tstop: false,\n\t\t\tx: xValue,\n\t\t\ty: interpolatedValue\n\t\t};\n\n\t\titems.push({datasetIndex: datasetIndex, element: fakePoint, index: 0});\n\t}\n\n\n\t// add other, not interpolated, items\n\tvar xItems = Interaction.modes.x(chart, e, options);\n\tfor (index = 0; index < xItems.length; index++) {\n\t\tvar item = xItems[index];\n\t\tif (!chart.data.datasets[item.datasetIndex].interpolate) {\n\t\t\titems.push(item);\n\t\t}\n\t}\n\n\treturn items;\n}\n\nvar defaultOptions = {\n  line: {\n    color: '#F66',\n    width: 1,\n    dashPattern: []\n  },\n  sync: {\n    enabled: true,\n    group: 1,\n    suppressTooltips: false\n  },\n  zoom: {\n    enabled: true,\n    zoomboxBackgroundColor: 'rgba(66,133,244,0.2)',\n    zoomboxBorderColor: '#48F',\n    zoomButtonText: 'Reset Zoom',\n    zoomButtonClass: 'reset-zoom',\n  },\n  snap: {\n    enabled: false,\n  },\n  callbacks: {\n    beforeZoom: function(start, end) {\n      return true;\n    },\n    afterZoom: function(start, end) {\n    }\n  }\n};\n\nvar CrosshairPlugin = {\n\n  id: 'crosshair',\n\n  afterInit: function(chart) {\n    \n    if (!chart.config.options.scales.x) {\n      return\n    }\n\n    var xScaleType = chart.config.options.scales.x.type;\n\n    if (xScaleType !== 'linear' && xScaleType !== 'time' && xScaleType !== 'category' && xScaleType !== 'logarithmic') {\n      return;\n    }\n\n    if (chart.options.plugins.crosshair === undefined) {\n      chart.options.plugins.crosshair = defaultOptions;\n    }\n\n    chart.crosshair = {\n      enabled: false,\n      suppressUpdate: false,\n      x: null,\n      originalData: [],\n      originalXRange: {},\n      dragStarted: false,\n      dragStartX: null,\n      dragEndX: null,\n      suppressTooltips: false,\n      ignoreNextEvents: 0,\n      reset: function() {\n        this.resetZoom(chart, false, false);\n      }.bind(this)\n    };\n\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    if (syncEnabled) {\n      chart.crosshair.syncEventHandler = function(e) {\n        this.handleSyncEvent(chart, e);\n      }.bind(this);\n\n      chart.crosshair.resetZoomEventHandler = function(e) {\n\n        var syncGroup = this.getOption(chart, 'sync', 'group');\n\n        if (e.chartId !== chart.id && e.syncGroup === syncGroup) {\n          this.resetZoom(chart, true);\n        }\n      }.bind(this);\n\n      window.addEventListener('sync-event', chart.crosshair.syncEventHandler);\n      window.addEventListener('reset-zoom-event', chart.crosshair.resetZoomEventHandler);\n    }\n\n    chart.panZoom = this.panZoom.bind(this, chart);\n  },\n\n  afterDestroy: function(chart) {\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    if (syncEnabled) {\n      window.removeEventListener('sync-event', chart.crosshair.syncEventHandler);\n      window.removeEventListener('reset-zoom-event', chart.crosshair.resetZoomEventHandler);\n    }\n  },\n\n  panZoom: function(chart, increment) {\n    if (chart.crosshair.originalData.length === 0) {\n      return;\n    }\n    var diff = chart.crosshair.end - chart.crosshair.start;\n    var min = chart.crosshair.min;\n    var max = chart.crosshair.max;\n    if (increment < 0) { // left\n      chart.crosshair.start = Math.max(chart.crosshair.start + increment, min);\n      chart.crosshair.end = chart.crosshair.start === min ? min + diff : chart.crosshair.end + increment;\n    } else { // right\n      chart.crosshair.end = Math.min(chart.crosshair.end + increment, chart.crosshair.max);\n      chart.crosshair.start = chart.crosshair.end === max ? max - diff : chart.crosshair.start + increment;\n    }\n\n    this.doZoom(chart, chart.crosshair.start, chart.crosshair.end);\n  },\n\n  getOption: function(chart, category, name) {\n    return valueOrDefault(chart.options.plugins.crosshair[category] ? chart.options.plugins.crosshair[category][name] : undefined, defaultOptions[category][name]);\n  },\n\n  getXScale: function(chart) {\n    return chart.data.datasets.length ? chart.scales[chart.getDatasetMeta(0).xAxisID] : null;\n  },\n  getYScale: function(chart) {\n    return chart.scales[chart.getDatasetMeta(0).yAxisID];\n  },\n\n  handleSyncEvent: function(chart, e) {\n\n    var syncGroup = this.getOption(chart, 'sync', 'group');\n\n    // stop if the sync event was fired from this chart\n    if (e.chartId === chart.id) {\n      return;\n    }\n\n    // stop if the sync event was fired from a different group\n    if (e.syncGroup !== syncGroup) {\n      return;\n    }\n\n    var xScale = this.getXScale(chart);\n\n    if (!xScale) {\n      return;\n    }\n\n    // Safari fix\n    var buttons = (e.original.native.buttons === undefined ? e.original.native.which : e.original.native.buttons);\n    if (e.original.type === 'mouseup') {\n      buttons = 0;\n    }\n\n\n    var newEvent = {\n      type: e.original.type == \"click\" ? \"mousemove\" : e.original.type,  // do not transmit click events to prevent unwanted changing of synced charts. We do need to transmit a event to stop zooming on synced charts however.\n      chart: chart,\n      x: xScale.getPixelForValue(e.xValue),\n      y: e.original.y,\n      native: {\n        buttons: buttons\n      },\n      stop: true\n    };\n    chart._eventHandler(newEvent);\n  },\n\n  afterEvent: function(chart, event) {\n\n    if (chart.config.options.scales.x.length == 0) {\n      return\n    }\n\n    let e = event.event;\n\n    var xScaleType = chart.config.options.scales.x.type;\n\n    if (xScaleType !== 'linear' && xScaleType !== 'time' && xScaleType !== 'category' && xscaleType !== 'logarithmic') {\n      return;\n    }\n\n    var xScale = this.getXScale(chart);\n\n    if (!xScale) {\n      return;\n    }\n\n    if(chart.crosshair.ignoreNextEvents > 0) {\n      chart.crosshair.ignoreNextEvents -= 1;\n      return;\n    }\n\n    // fix for Safari\n    var buttons = (e.native.buttons === undefined ? e.native.which : e.native.buttons);\n    if (e.native.type === 'mouseup') {\n      buttons = 0;\n    }\n\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n    var syncGroup = this.getOption(chart, 'sync', 'group');\n\n    // fire event for all other linked charts\n    if (!e.stop && syncEnabled) {\n      var event = new CustomEvent('sync-event');\n      event.chartId = chart.id;\n      event.syncGroup = syncGroup;\n      event.original = e;\n      event.xValue = xScale.getValueForPixel(e.x);\n      window.dispatchEvent(event);\n    }\n\n    // suppress tooltips for linked charts\n    var suppressTooltips = this.getOption(chart, 'sync', 'suppressTooltips');\n\n    chart.crosshair.suppressTooltips = e.stop && suppressTooltips;\n\n    chart.crosshair.enabled = (e.type !== 'mouseout' && (e.x > xScale.getPixelForValue(xScale.min) && e.x < xScale.getPixelForValue(xScale.max)));\n\n    if (!chart.crosshair.enabled && !chart.crosshair.suppressUpdate) {\n      if (e.x > xScale.getPixelForValue(xScale.max)) {\n        // suppress future updates to prevent endless redrawing of chart\n        chart.crosshair.suppressUpdate = true;\n        chart.update('none');\n      }\n      chart.crosshair.dragStarted = false; // cancel zoom in progress\n      return false;\n    }\n    chart.crosshair.suppressUpdate = false;\n\n    // handle drag to zoom\n    var zoomEnabled = this.getOption(chart, 'zoom', 'enabled');\n\n    if (buttons === 1 && !chart.crosshair.dragStarted && zoomEnabled) {\n      chart.crosshair.dragStartX = e.x;\n      chart.crosshair.dragStarted = true;\n    }\n\n    // handle drag to zoom\n    if (chart.crosshair.dragStarted && buttons === 0) {\n      chart.crosshair.dragStarted = false;\n\n      var start = xScale.getValueForPixel(chart.crosshair.dragStartX);\n      var end = xScale.getValueForPixel(chart.crosshair.x);\n\n      if (Math.abs(chart.crosshair.dragStartX - chart.crosshair.x) > 1) {\n        this.doZoom(chart, start, end);\n      }\n      chart.update('none');\n    }\n\n    chart.crosshair.x = e.x;\n\n\n    chart.draw();\n\n  },\n\n  afterDraw: function(chart) {\n\n    if (!chart.crosshair.enabled) {\n      return;\n    }\n\n    if (chart.crosshair.dragStarted) {\n      this.drawZoombox(chart);\n    } else {\n      this.drawTraceLine(chart);\n      this.interpolateValues(chart);\n      this.drawTracePoints(chart);\n    }\n\n    return true;\n  },\n\n  beforeTooltipDraw: function(chart) {\n    // suppress tooltips on dragging\n    return !chart.crosshair.dragStarted && !chart.crosshair.suppressTooltips;\n  },\n\n  resetZoom: function(chart) {\n\n    var stop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (update) {\n      if (chart.crosshair.originalData.length > 0) {\n        // reset original data\n        for (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n          var dataset = chart.data.datasets[datasetIndex];\n          dataset.data = chart.crosshair.originalData.shift(0);\n        }\n      }\n\n      // reset original xRange\n      if (chart.crosshair.originalXRange.min) {\n        chart.options.scales.x.min = chart.crosshair.originalXRange.min;\n        chart.crosshair.originalXRange.min = null;\n      } else {\n        delete chart.options.scales.x.min;\n      }\n      if (chart.crosshair.originalXRange.max) {\n        chart.options.scales.x.max = chart.crosshair.originalXRange.max;\n        chart.crosshair.originalXRange.max = null;\n      } else {\n        delete chart.options.scales.x.max;\n      }\n    }\n\n    if (chart.crosshair.button && chart.crosshair.button.parentNode) {\n      chart.crosshair.button.parentNode.removeChild(chart.crosshair.button);\n      chart.crosshair.button = false;\n    }\n\n    var syncEnabled = this.getOption(chart, 'sync', 'enabled');\n\n    if (!stop && update && syncEnabled) {\n\n      var syncGroup = this.getOption(chart, 'sync', 'group');\n\n      var event = new CustomEvent('reset-zoom-event');\n      event.chartId = chart.id;\n      event.syncGroup = syncGroup;\n      window.dispatchEvent(event);\n    }\n    if (update) {\n      chart.update('none');\n    }\n  },\n\n  doZoom: function(chart, start, end) {\n\n    // swap start/end if user dragged from right to left\n    if (start > end) {\n      var tmp = start;\n      start = end;\n      end = tmp;\n    }\n\n    // notify delegate\n    var beforeZoomCallback = valueOrDefault(chart.options.plugins.crosshair.callbacks ? chart.options.plugins.crosshair.callbacks.beforeZoom : undefined, defaultOptions.callbacks.beforeZoom);\n\n    if (!beforeZoomCallback(start, end)) {\n      return false;\n    }\n\n    chart.crosshair.dragStarted = false;\n\n    if (chart.options.scales.x.min && chart.crosshair.originalData.length === 0) {\n      chart.crosshair.originalXRange.min = chart.options.scales.x.min;\n    }\n    if (chart.options.scales.x.max && chart.crosshair.originalData.length === 0) {\n      chart.crosshair.originalXRange.max = chart.options.scales.x.max;\n    }\n\n    if (!chart.crosshair.button) {\n      // add restore zoom button\n      var button = document.createElement('button');\n\n      var buttonText = this.getOption(chart, 'zoom', 'zoomButtonText');\n      var buttonClass = this.getOption(chart, 'zoom', 'zoomButtonClass');\n\n      var buttonLabel = document.createTextNode(buttonText);\n      button.appendChild(buttonLabel);\n      button.className = buttonClass;\n      button.addEventListener('click', function() {\n        this.resetZoom(chart);\n      }.bind(this));\n      chart.canvas.parentNode.appendChild(button);\n      chart.crosshair.button = button;\n    }\n\n    // set axis scale\n    chart.options.scales.x.min = start;\n    chart.options.scales.x.max = end;\n\n    // make a copy of the original data for later restoration\n\n    var storeOriginals = (chart.crosshair.originalData.length === 0) ? true : false;\n\n\n    var filterDataset = (chart.config.options.scales.x.type !== 'category');\n\n    if(filterDataset) {\n\n\n      for (var datasetIndex = 0; datasetIndex < chart.data.datasets.length; datasetIndex++) {\n\n        var newData = [];\n\n        var index = 0;\n        var started = false;\n        var stop = false;\n        if (storeOriginals) {\n          chart.crosshair.originalData[datasetIndex] = chart.data.datasets[datasetIndex].data;\n        }\n\n        var sourceDataset = chart.crosshair.originalData[datasetIndex];\n\n        for (var oldDataIndex = 0; oldDataIndex < sourceDataset.length; oldDataIndex++) {\n\n          var oldData = sourceDataset[oldDataIndex];\n          // var oldDataX = this.getXScale(chart).getRightValue(oldData)\n          var oldDataX = oldData.x !== undefined ? oldData.x : NaN;\n\n          // append one value outside of bounds\n          if (oldDataX >= start && !started && index > 0) {\n            newData.push(sourceDataset[index - 1]);\n            started = true;\n          }\n          if (oldDataX >= start && oldDataX <= end) {\n            newData.push(oldData);\n          }\n          if (oldDataX > end && !stop && index < sourceDataset.length) {\n            newData.push(oldData);\n            stop = true;\n          }\n          index += 1;\n        }\n\n        chart.data.datasets[datasetIndex].data = newData;\n      }\n    }\n\n    chart.crosshair.start = start;\n    chart.crosshair.end = end;\n\n\n    if (storeOriginals) {\n      var xAxes = this.getXScale(chart);\n      chart.crosshair.min = xAxes.min;\n      chart.crosshair.max = xAxes.max;\n    }\n\n    chart.crosshair.ignoreNextEvents = 2; // ignore next 2 events to prevent starting a new zoom action after updating the chart\n\n    chart.update('none');\n\n\n    var afterZoomCallback = this.getOption(chart, 'callbacks', 'afterZoom');\n\n    afterZoomCallback(start, end);\n  },\n\n  drawZoombox: function(chart) {\n\n    var yScale = this.getYScale(chart);\n\n    var borderColor = this.getOption(chart, 'zoom', 'zoomboxBorderColor');\n    var fillColor = this.getOption(chart, 'zoom', 'zoomboxBackgroundColor');\n\n    chart.ctx.beginPath();\n    chart.ctx.rect(chart.crosshair.dragStartX, yScale.getPixelForValue(yScale.max), chart.crosshair.x - chart.crosshair.dragStartX, yScale.getPixelForValue(yScale.min) - yScale.getPixelForValue(yScale.max));\n    chart.ctx.lineWidth = 1;\n    chart.ctx.strokeStyle = borderColor;\n    chart.ctx.fillStyle = fillColor;\n    chart.ctx.fill();\n    chart.ctx.fillStyle = '';\n    chart.ctx.stroke();\n    chart.ctx.closePath();\n  },\n\n  drawTraceLine: function(chart) {\n\n    var yScale = this.getYScale(chart);\n\n    var lineWidth = this.getOption(chart, 'line', 'width');\n    var color = this.getOption(chart, 'line', 'color');\n    var dashPattern = this.getOption(chart, 'line', 'dashPattern');\n    var snapEnabled = this.getOption(chart, 'snap', 'enabled');\n\n    var lineX = chart.crosshair.x;\n\n    if (snapEnabled && chart._active.length) {\n      lineX = chart._active[0].element.x;\n    }\n\n    chart.ctx.beginPath();\n    chart.ctx.setLineDash(dashPattern);\n    chart.ctx.moveTo(lineX, yScale.getPixelForValue(yScale.max));\n    chart.ctx.lineWidth = lineWidth;\n    chart.ctx.strokeStyle = color;\n    chart.ctx.lineTo(lineX, yScale.getPixelForValue(yScale.min));\n    chart.ctx.stroke();\n    chart.ctx.setLineDash([]);\n\n  },\n\n  drawTracePoints: function(chart) {\n\n    for (var chartIndex = 0; chartIndex < chart.data.datasets.length; chartIndex++) {\n\n      var dataset = chart.data.datasets[chartIndex];\n      var meta = chart.getDatasetMeta(chartIndex);\n\n      var yScale = chart.scales[meta.yAxisID];\n\n      if (meta.hidden || !dataset.interpolate) {\n        continue;\n      }\n\n      chart.ctx.beginPath();\n      chart.ctx.arc(chart.crosshair.x, yScale.getPixelForValue(dataset.interpolatedValue), 3, 0, 2 * Math.PI, false);\n      chart.ctx.fillStyle = 'white';\n      chart.ctx.lineWidth = 2;\n      chart.ctx.strokeStyle = dataset.borderColor;\n      chart.ctx.fill();\n      chart.ctx.stroke();\n\n    }\n\n  },\n\n  interpolateValues: function(chart) {\n\n    for (var chartIndex = 0; chartIndex < chart.data.datasets.length; chartIndex++) {\n\n      var dataset = chart.data.datasets[chartIndex];\n\n      var meta = chart.getDatasetMeta(chartIndex);\n\n      var xScale = chart.scales[meta.xAxisID];\n      var xValue = xScale.getValueForPixel(chart.crosshair.x);\n\n      if (meta.hidden || !dataset.interpolate) {\n        continue;\n      }\n\n      var data = dataset.data;\n      var index = data.findIndex(function(o) {\n        return o.x >= xValue;\n      });\n      var prev = data[index - 1];\n      var next = data[index];\n\n      if (chart.data.datasets[chartIndex].steppedLine && prev) {\n        dataset.interpolatedValue = prev.y;\n      } else if (prev && next) {\n        var slope = (next.y - prev.y) / (next.x - prev.x);\n        dataset.interpolatedValue = prev.y + (xValue - prev.x) * slope;\n      } else {\n        dataset.interpolatedValue = NaN;\n      }\n    }\n\n  }\n\n};\n\nexport { CrosshairPlugin, interpolate as Interpolate, CrosshairPlugin as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}