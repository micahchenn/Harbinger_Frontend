{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micah\\\\Desktop\\\\Harbinger_Frontend\\\\frontend\\\\src\\\\Javascript_Pages\\\\Public_Pages\\\\Login_Page.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * @file Login_Page.jsx\r\n * @author Micah Chen \r\n * @date Last Modified: 5/20/2024\r\n * \r\n * Description: This file contains the implementation of the login page. The login functionality is achieved by sending a POST request\r\n * to the server with the user's username and password. This request is facilitated by an Axios instance, which is defined\r\n * in the api.js file.\r\n * \r\n * Upon successful login, the server responds with access and refresh tokens. These tokens are then stored in the local \r\n * storage for future use. The user is then redirected to the home page.\r\n * \r\n * In case of an unsuccessful login attempt, an appropriate error message is displayed to the user. \r\n * (We created a translate a error at the bottom of the file to handle different error cases for HTTP response status codes.)\r\n */\nimport { useState } from \"react\";\nimport api from \"../../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"../../Constants\";\nimport \"../../Styling_Pages/Public_Pages/Login_Page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault(); //prevents the form from being submitted in the traditional way, which includes a page refresh.\n\n    try {\n      const res = await api.post(\"authenticate/user-login/\", {\n        username,\n        password\n      }); //res sends a post to the server to login\n      localStorage.setItem(ACCESS_TOKEN, res.data.access); //if it is successful, the access and refresh token is stored in local storage\n      localStorage.setItem(REFRESH_TOKEN, res.data.refresh);\n      navigate(\"/my-dashboard\");\n    } catch (error) {\n      setError(translateError(error));\n    } finally {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-input\",\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-input\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-button\",\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"0YoD3sR8kWoMWOsdGW+itJuNkqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst translateError = error => {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        return 'Invalid username or password';\n      case 404:\n        return 'Username not found';\n      default:\n        return 'An error occurred. Please try again later.';\n    }\n  } else {\n    return 'An error occurred. Please try again later.';\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","api","useNavigate","ACCESS_TOKEN","REFRESH_TOKEN","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","res","post","localStorage","setItem","data","access","refresh","translateError","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","response","status","$RefreshReg$"],"sources":["C:/Users/micah/Desktop/Harbinger_Frontend/frontend/src/Javascript_Pages/Public_Pages/Login_Page.jsx"],"sourcesContent":["/**\r\n * @file Login_Page.jsx\r\n * @author Micah Chen \r\n * @date Last Modified: 5/20/2024\r\n * \r\n * Description: This file contains the implementation of the login page. The login functionality is achieved by sending a POST request\r\n * to the server with the user's username and password. This request is facilitated by an Axios instance, which is defined\r\n * in the api.js file.\r\n * \r\n * Upon successful login, the server responds with access and refresh tokens. These tokens are then stored in the local \r\n * storage for future use. The user is then redirected to the home page.\r\n * \r\n * In case of an unsuccessful login attempt, an appropriate error message is displayed to the user. \r\n * (We created a translate a error at the bottom of the file to handle different error cases for HTTP response status codes.)\r\n */\r\nimport { useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"../../Constants\";\r\nimport \"../../Styling_Pages/Public_Pages/Login_Page.css\";\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); //prevents the form from being submitted in the traditional way, which includes a page refresh.\r\n\r\n        try {\r\n            const res = await api.post(\"authenticate/user-login/\", { username, password }); //res sends a post to the server to login\r\n            localStorage.setItem(ACCESS_TOKEN, res.data.access); //if it is successful, the access and refresh token is stored in local storage\r\n            localStorage.setItem(REFRESH_TOKEN, res.data.refresh); \r\n            navigate(\"/my-dashboard\");\r\n        } catch (error) {\r\n            setError(translateError(error));\r\n        } finally {\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <h1>Login</h1>\r\n            <input\r\n                className=\"form-input\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n            />\r\n            <input\r\n                className=\"form-input\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n            />\r\n            <button className=\"form-button\" type=\"submit\">\r\n                Login\r\n            </button>\r\n            {error && <p>{error}</p>}\r\n        </form>\r\n    );\r\n}\r\n\r\nconst translateError = (error) => {\r\n    if (error.response) {\r\n        switch (error.response.status) {\r\n            case 401:\r\n                return 'Invalid username or password';\r\n            case 404:\r\n                return 'Username not found';\r\n            default:\r\n                return 'An error occurred. Please try again later.';\r\n        }\r\n    } else {\r\n        return 'An error occurred. Please try again later.';\r\n    }\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}