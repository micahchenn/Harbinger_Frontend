{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micah\\\\Desktop\\\\Harbinger_Frontend\\\\frontend\\\\src\\\\Javascript_Pages\\\\Public_Pages\\\\Signup_Page.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * @file Signup_Page.jsx\r\n * @author Micah Chen\r\n * @date Last Modified: 5/20/2024\r\n * @returns JSX.Element\r\n *\r\n * Description: This file contains the implementation of the signup page. The signup functionality is achieved by sending a POST request\r\n * to the server with the user's username, email, and password. This request is facilitated by an Axios instance, which is defined\r\n * in the api.js file.\r\n * \r\n * Backend API: POST request to /authenticate/user-register/ calls the CreateUserView view in views.py\r\n *\r\n * Upon successful signup, the user is redirected to the login page to authenticate themselves.\r\n *\r\n * In case of an unsuccessful signup attempt, an appropriate error message is displayed to the user. \r\n * (We created a translateError function at the bottom of the file to handle different error cases for HTTP response status codes.)\r\n * \r\n * TODO: ADD frontend validation for email and password fields and add a confirm password field. \r\n * Add Backend error codes for invalid fields like username already exists or email already exists.\r\n */\n\nimport { useState } from \"react\";\nimport api from \"../../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../../Styling_Pages/Public_Pages/Signup_Page.css';\n//import { ACCESS_TOKEN, REFRESH_TOKEN } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await api.post(\"authenticate/user-signup/\", {\n        username,\n        email,\n        password\n      });\n      //localStorage.setItem(ACCESS_TOKEN, res.data.access); \n      //localStorage.setItem(REFRESH_TOKEN, res.data.refresh);\n      navigate(\"/login\");\n    } catch (error) {\n      setError(translateError(error));\n    } finally {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"signup-form-input\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"signup-form-input\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"signup-form-input\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-form-button\",\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"yjSPqqhbkBPKoH7QuYdhOVD9Nig=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nconst translateError = error => {\n  if (error.response) {\n    if (error.response.status === 400) {\n      return 'Username or email is not allowed';\n    }\n    return 'An error occurred with the fields you provided Please try with different fields.';\n  } else {\n    return 'An error occurred. Please try again later.';\n  }\n};\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","api","useNavigate","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","res","post","translateError","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","response","status","$RefreshReg$"],"sources":["C:/Users/micah/Desktop/Harbinger_Frontend/frontend/src/Javascript_Pages/Public_Pages/Signup_Page.jsx"],"sourcesContent":["/**\r\n * @file Signup_Page.jsx\r\n * @author Micah Chen\r\n * @date Last Modified: 5/20/2024\r\n * @returns JSX.Element\r\n *\r\n * Description: This file contains the implementation of the signup page. The signup functionality is achieved by sending a POST request\r\n * to the server with the user's username, email, and password. This request is facilitated by an Axios instance, which is defined\r\n * in the api.js file.\r\n * \r\n * Backend API: POST request to /authenticate/user-register/ calls the CreateUserView view in views.py\r\n *\r\n * Upon successful signup, the user is redirected to the login page to authenticate themselves.\r\n *\r\n * In case of an unsuccessful signup attempt, an appropriate error message is displayed to the user. \r\n * (We created a translateError function at the bottom of the file to handle different error cases for HTTP response status codes.)\r\n * \r\n * TODO: ADD frontend validation for email and password fields and add a confirm password field. \r\n * Add Backend error codes for invalid fields like username already exists or email already exists.\r\n */\r\n\r\nimport { useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../../Styling_Pages/Public_Pages/Signup_Page.css';\r\n//import { ACCESS_TOKEN, REFRESH_TOKEN } from \"../Constants\";\r\n\r\nfunction Signup() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await api.post(\"authenticate/user-signup/\", { username, email, password });\r\n            //localStorage.setItem(ACCESS_TOKEN, res.data.access); \r\n            //localStorage.setItem(REFRESH_TOKEN, res.data.refresh);\r\n            navigate(\"/login\");\r\n        } catch (error) {\r\n            setError(translateError(error));\r\n        } finally {\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-page\">\r\n            <form onSubmit={handleSubmit} className=\"signup-form-container\">\r\n                <h1>Signup</h1>\r\n                {error && <p className=\"signup-error-message\">{error}</p>}\r\n                <input\r\n                    className=\"signup-form-input\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Username\"\r\n                />\r\n                <input\r\n                    className=\"signup-form-input\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    className=\"signup-form-input\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button className=\"signup-form-button\" type=\"submit\">\r\n                    Signup\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst translateError = (error) => {\r\n    if (error.response) {\r\n        if (error.response.status === 400) {\r\n            return 'Username or email is not allowed';\r\n        }\r\n        return 'An error occurred with the fields you provided Please try with different fields.';\r\n    } else {\r\n        return 'An error occurred. Please try again later.';\r\n    }\r\n};\r\n\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}